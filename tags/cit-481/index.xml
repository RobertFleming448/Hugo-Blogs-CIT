<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CIT-481 on Robert Fleming&#39;s CIT Blog</title>
    <link>https://robertfleming448.github.io/tags/cit-481/</link>
    <description>Recent content in CIT-481 on Robert Fleming&#39;s CIT Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 08 Apr 2021 11:34:38 -0700</lastBuildDate><atom:link href="https://robertfleming448.github.io/tags/cit-481/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CIT 481 blog 6</title>
      <link>https://robertfleming448.github.io/post/481blog6/</link>
      <pubDate>Thu, 08 Apr 2021 11:34:38 -0700</pubDate>
      
      <guid>https://robertfleming448.github.io/post/481blog6/</guid>
      <description>Preface I am going to try something slightly different this week. As I don&amp;rsquo;t feel that my progress in any one project is substantial nor unique enough to fill the contents of a full blog, I am going to make this blog a double feature The first part will detail my exploits in Terraform to quickly build cloud architecture, and my second part will explain how I setup pf in freeBSD.
Terraform Introduction This part will go over how I created the AWS infrastructure for our group project using Terraform. I was tasked with writing the compute section of our Terraform which includes:</description>
    </item>
    
    <item>
      <title>CIT 481 blog 5</title>
      <link>https://robertfleming448.github.io/post/481blog5/</link>
      <pubDate>Wed, 31 Mar 2021 17:37:47 -0700</pubDate>
      
      <guid>https://robertfleming448.github.io/post/481blog5/</guid>
      <description>Introduction As mentioned in the blog prior where I discussed Load Balancers and Certificates on AWS, this week I will be going over my solution for getting our SSH bastion to function as intended.
SSH Bastion As a preface, an SSH Bastion is a remote server that resides in a public section of a network. By connecting to this node, you can further connect to other machines located in private, non-internet facing subnets.
Server Setup An ssh bastion really is very similar to any other machine out there. All that really matters for our implementation is having a network with a private and public subnet.</description>
    </item>
    
    <item>
      <title>CIT 481 blog 4</title>
      <link>https://robertfleming448.github.io/post/481blog4/</link>
      <pubDate>Thu, 25 Mar 2021 13:45:40 -0700</pubDate>
      
      <guid>https://robertfleming448.github.io/post/481blog4/</guid>
      <description>Introduction In this blog I will record my issues and solutions I went through while trying to complete the first module of our CIT 481 Senior Design project.
Background Our team is undergoing an alternative project offered by the professor and we are tasked with using an Ansible playbook to automate building a tech stack on an AWS infrastructure. This infrastructure includes 3 private and 3 public subnets spanning across 3 separate availability zones. Each Availability zone must contain a private web server EC2 instance and a public SSH bastion Host EC2 instance. I will focus on the computing resources in this blog and less so on the VPC as that was a lesser role of mine.</description>
    </item>
    
    <item>
      <title>CIT 481 blog 3</title>
      <link>https://robertfleming448.github.io/post/481blog3/</link>
      <pubDate>Wed, 10 Mar 2021 18:33:58 -0800</pubDate>
      
      <guid>https://robertfleming448.github.io/post/481blog3/</guid>
      <description>Introduction For this blog I will be going over my process and reasoning for creating a Minecraft Server with a Raspberry Pi 4. This is one of the topics I have saved for moments that are somewhat slow this semester. While I have been working diligently on other projects, the content is not substantial enough to fill an entire blog. As a result, I will keep it on the backburner until I feel suitable progress has been made.
Reasoning During this pandemic, I find interacting with friends online to be a more pressing matter. Without avenues to interact with my peers, I would surely go mad.</description>
    </item>
    
    <item>
      <title>CIT 481 blog 2</title>
      <link>https://robertfleming448.github.io/post/481blog2/</link>
      <pubDate>Wed, 03 Mar 2021 19:30:09 -0800</pubDate>
      
      <guid>https://robertfleming448.github.io/post/481blog2/</guid>
      <description>Introduction This blog I will be detailing the process I went through to acquire a domain and a TLS certificate to allow HTTPS traffic. This will be the first part in a potential multipart series going through my tasks in the CIT 481 semester-long group project. I was put in charge of Domain and Certificate Acquisition as I was the one with the most experience with domains.
Domain Choice Being poor college students, we didn&amp;rsquo;t want to break the bank on our domain. However, we still wanted it to be related to our team, to make it easily distinguishable. With those prerequisites in mind, I went searching several domain registrar websites to find a cheap year long domain license.</description>
    </item>
    
    <item>
      <title>CIT 481 blog 1</title>
      <link>https://robertfleming448.github.io/post/481blog1/</link>
      <pubDate>Wed, 24 Feb 2021 20:53:24 -0800</pubDate>
      
      <guid>https://robertfleming448.github.io/post/481blog1/</guid>
      <description>Introduction Despite this being my senior year, and having a relatively light scholastic work-load, I still thankfully have something to write about. I have a backlog of projects that I can dive into should the need arise later in the semester perhaps when things slow down. Additionally, only 2 of my 3 major classes this semester I would consider &amp;ldquo;technical.&amp;rdquo; One of those has little to no coding on a weekly basis. However this week that class has provided me with an opportunity to write down my lab progress. We were tasked with configuring, building, and installing a custom kernel for FreeBSD.</description>
    </item>
    
    <item>
      <title>CIT 481 blog 0</title>
      <link>https://robertfleming448.github.io/post/481blog0/</link>
      <pubDate>Thu, 18 Feb 2021 13:40:25 -0800</pubDate>
      
      <guid>https://robertfleming448.github.io/post/481blog0/</guid>
      <description>Introduction As we start a fresh semester, I find a fresh set of visuals will help keep things interested. As such, my blogs now have a sleek minimalistic design using the Hugo Fuji theme. Yes you read that right. My blog will now be using Hugo. For my previous blogs that I wrote during my semester in CIT 480, I used a similar static site generator called Jekyll. While it did the job, I by no means used all its features to their best extent, and I overall was not too fond of it. That is why I decided to use Hugo from this point forward.</description>
    </item>
    
  </channel>
</rss>
